- implement fitness function plot
- store best for each generation separately
- make values close to 0 = 0. (lowest 5% or 10%)
- try with 5 agents
- try random vectors to see if they produce order
- add the f = fitness + a*norm(c_values) version and test for different values of a a
- add sectors to verify movement/encourage exploration
- limit orientation difference
    - count occurrences of large orientation differences. if more than x percent of cases, add the percentage to the fitness (80% = 80)
    - if too many large orientation diffrences, return 1000 for the fitness
    - use NGA-II (NSGA-II?) to explore the pareto front
- use L1 norm on the c_values-vector for the simulation and L0 norm on the c_values for eval (f(L1(c_values)) + aL0(c_values))
    - possiblytry L0, L1 norm for the c-values minimization
    - possibly try a*L0*L1 norm for the c_values minimization
- try with events 

13.11.:
- use L1 norm instead of L0 to minimise magnitude of the c-values
- set cs to 0 if the value is smaller than 1% of the domain (1% of 10 = 0.1)
- mutate value based on random value (90% prob for noise, 5% prob for setting to 0, 5% prob for setting to a random new value within the bounds)
- start with very sparse vectors (only 5% or 10% with values)

eval:
- pca
- hierarchical clustering
